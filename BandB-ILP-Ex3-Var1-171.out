
============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 4
  x2: 0 <= x2 <= 10
  x3: 0 <= x3 <= 6

Upper bounds converted to constraints:
  x1 <= 4
  x2 <= 10
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 26
5 x1 + 4 x2 + 7 x3 <= 42
2 x1 + 3 x2 + 5 x3 <= 28
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 26
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 42
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 28
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 4
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 10
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 5 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 22/17
x2 = 144/17
x3 = 0
Objective value: 1660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166/17

LP Solution:
  x0 = 22/17 (bounds: (0, 4))
  x1 = 144/17 (bounds: (0, 10))
  x2 = 0 (bounds: (0, 6))
  Objective = 1660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166/17
  Status = optimal

Initial LP relaxation:
  x0 = 22/17 (bounds: (0, 4))
  x1 = 144/17 (bounds: (0, 10))
  x2 = 0 (bounds: (0, 6))
  Objective = 1660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166/17

Processing node [(0, 4), (0, 10), (0, 6)]:
  LP value: 1660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166/17
  x0 = 22/17 (bounds: (0, 4))
  x1 = 144/17 (bounds: (0, 10))
  x2 = 0 (bounds: (0, 6))

Branching on x1 = 144/17 (between 8 and 9)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 4
  x2: 0 <= x2 <= 8
  x3: 0 <= x3 <= 6

Upper bounds converted to constraints:
  x1 <= 4
  x2 <= 8
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 26
5 x1 + 4 x2 + 7 x3 <= 42
2 x1 + 3 x2 + 5 x3 <= 28
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 26
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 42
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 28
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 4
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 8
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 5 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 38/29
x2 = 8
x3 = 8/29
Objective value: 2780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000286/29

LP Solution:
  x0 = 38/29 (bounds: (0, 4))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 8/29 (bounds: (0, 6))
  Objective = 2780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000286/29
  Status = optimal
Created left child with x1 <= 8: obj = 2780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000286/29

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 4
  x2: 9 <= x2 <= 10
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 1 (L=9)

Upper bounds converted to constraints:
  x1 <= 4
  x2 <= 10
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 8
5 x1 + 4 x2 + 7 x3 <= 6
2 x1 + 3 x2 + 5 x3 <= 1
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 8
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 6
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 4
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 3 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 1/2
x2 = 9
x3 = 0
Objective value: 190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019/2

LP Solution:
  x0 = 1/2 (bounds: (0, 4))
  x1 = 9 (bounds: (Fraction(9, 1), 10))
  x2 = 0 (bounds: (0, 6))
  Objective = 190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019/2
  Status = optimal
Created right child with x1 >= 9: obj = 190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019/2

Processing node [(0, 4), (0, Fraction(8, 1)), (0, 6)]:
  LP value: 2780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000286/29
  x0 = 38/29 (bounds: (0, 4))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 8/29 (bounds: (0, 6))

Branching on x0 = 38/29 (between 1 and 2)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 1
  x2: 0 <= x2 <= 8
  x3: 0 <= x3 <= 6

Upper bounds converted to constraints:
  x1 <= 1
  x2 <= 8
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 26
5 x1 + 4 x2 + 7 x3 <= 42
2 x1 + 3 x2 + 5 x3 <= 28
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 26
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 42
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 28
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 8
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 1
x2 = 8
x3 = 2/5
Objective value: 470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049/5

LP Solution:
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 2/5 (bounds: (0, 6))
  Objective = 470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049/5
  Status = optimal
Created left child with x0 <= 1: obj = 470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049/5

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 2 <= x1 <= 4
  x2: 0 <= x2 <= 8
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x1': 0 <= x1' <= 2 (L=2)

Upper bounds converted to constraints:
  x1 <= 4
  x2 <= 8
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 12
5 x1 + 4 x2 + 7 x3 <= 32
2 x1 + 3 x2 + 5 x3 <= 24
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 12
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 32
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 24
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 2
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 8
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 3 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 2
x2 = 6
x3 = 0
Objective value: 80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008

LP Solution:
  x0 = 2 (bounds: (Fraction(2, 1), 4))
  x1 = 6 (bounds: (0, Fraction(8, 1)))
  x2 = 0 (bounds: (0, 6))
  Objective = 80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008
  Status = optimal
Created right child with x0 >= 2: obj = 80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008

Processing node [(0, 4), (Fraction(9, 1), 10), (0, 6)]:
  LP value: 190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019/2
  x0 = 1/2 (bounds: (0, 4))
  x1 = 9 (bounds: (Fraction(9, 1), 10))
  x2 = 0 (bounds: (0, 6))

Branching on x0 = 1/2 (between 0 and 1)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 0
  x2: 9 <= x2 <= 10
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 1 (L=9)

Upper bounds converted to constraints:
  x1 <= 0
  x2 <= 10
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 8
5 x1 + 4 x2 + 7 x3 <= 6
2 x1 + 3 x2 + 5 x3 <= 1
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 8
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 6
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 0
x2 = 28/3
x3 = 0
Objective value: 280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028/3

LP Solution:
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 28/3 (bounds: (Fraction(9, 1), 10))
  x2 = 0 (bounds: (0, 6))
  Objective = 280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028/3
  Status = optimal
Created left child with x0 <= 0: obj = 280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028/3

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 1 <= x1 <= 4
  x2: 9 <= x2 <= 10
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x1': 0 <= x1' <= 3 (L=1)
  x2': 0 <= x2' <= 1 (L=9)

Upper bounds converted to constraints:
  x1 <= 4
  x2 <= 10
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 1
5 x1 + 4 x2 + 7 x3 <= 1
2 x1 + 3 x2 + 5 x3 <= -1
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= -1
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 3
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 3 iterations (Phase 2)

=== Verifying Solution Feasibility ===
Constraint 3 violated: 29 <= 28 is not satisfied

=== Problem Status ===
Problem status: infeasible (solution violates constraints or bounds)

Processing node [(0, Fraction(1, 1)), (0, Fraction(8, 1)), (0, 6)]:
  LP value: 470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049/5
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 2/5 (bounds: (0, 6))

Branching on x2 = 2/5 (between 0 and 1)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 1
  x2: 0 <= x2 <= 8
  x3: 0 <= x3 <= 0

Upper bounds converted to constraints:
  x1 <= 1
  x2 <= 8
  x3 <= 0

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 26
5 x1 + 4 x2 + 7 x3 <= 42
2 x1 + 3 x2 + 5 x3 <= 28
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 26
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 42
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 28
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 8
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 0
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 1
x2 = 8
x3 = 0
Objective value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009

LP Solution:
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 0 (bounds: (0, Fraction(0, 1)))
  Objective = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009
  Status = optimal
Created left child with x2 <= 0: obj = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 1
  x2: 0 <= x2 <= 8
  x3: 1 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x3': 0 <= x3' <= 5 (L=1)

Upper bounds converted to constraints:
  x1 <= 1
  x2 <= 8
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 23
5 x1 + 4 x2 + 7 x3 <= 35
2 x1 + 3 x2 + 5 x3 <= 23
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 23
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 35
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 23
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 8
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 5
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 1
x2 = 7
x3 = 1
Objective value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010

LP Solution:
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 7 (bounds: (0, Fraction(8, 1)))
  x2 = 1 (bounds: (Fraction(1, 1), 6))
  Objective = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
  Status = optimal
Created right child with x2 >= 1: obj = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010

Processing node [(0, Fraction(0, 1)), (Fraction(9, 1), 10), (0, 6)]:
  LP value: 280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028/3
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 28/3 (bounds: (Fraction(9, 1), 10))
  x2 = 0 (bounds: (0, 6))

Branching on x1 = 28/3 (between 9 and 10)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 0
  x2: 9 <= x2 <= 9
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 0 (L=9)

Upper bounds converted to constraints:
  x1 <= 0
  x2 <= 9
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 8
5 x1 + 4 x2 + 7 x3 <= 6
2 x1 + 3 x2 + 5 x3 <= 1
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 8
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 6
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 0
x2 = 9
x3 = 1/5
Objective value: 460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047/5

LP Solution:
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 9 (bounds: (Fraction(9, 1), Fraction(9, 1)))
  x2 = 1/5 (bounds: (0, 6))
  Objective = 460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047/5
  Status = optimal
Created left child with x1 <= 9: obj = 460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047/5

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 0
  x2: 10 <= x2 <= 10
  x3: 0 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 0 (L=10)

Upper bounds converted to constraints:
  x1 <= 0
  x2 <= 10
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 6
5 x1 + 4 x2 + 7 x3 <= 2
2 x1 + 3 x2 + 5 x3 <= -2
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 6
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 2
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= -2
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 6
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 3 iterations (Phase 2)

=== Verifying Solution Feasibility ===
Constraint 3 violated: 30 <= 28 is not satisfied

=== Problem Status ===
Problem status: infeasible (solution violates constraints or bounds)

Processing node [(0, Fraction(0, 1)), (Fraction(9, 1), Fraction(9, 1)), (0, 6)]:
  LP value: 460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047/5
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 9 (bounds: (Fraction(9, 1), Fraction(9, 1)))
  x2 = 1/5 (bounds: (0, 6))

Branching on x2 = 1/5 (between 0 and 1)

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 0
  x2: 9 <= x2 <= 9
  x3: 0 <= x3 <= 0

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 0 (L=9)

Upper bounds converted to constraints:
  x1 <= 0
  x2 <= 9
  x3 <= 0

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 8
5 x1 + 4 x2 + 7 x3 <= 6
2 x1 + 3 x2 + 5 x3 <= 1
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 8
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 6
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 1
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 0
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 4 iterations (Phase 2)

=== Verifying Solution Feasibility ===

=== Optimal Solution Found ===
x1 = 0
x2 = 9
x3 = 0
Objective value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009

LP Solution:
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 9 (bounds: (Fraction(9, 1), Fraction(9, 1)))
  x2 = 0 (bounds: (0, Fraction(0, 1)))
  Objective = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009
  Status = optimal
Created left child with x2 <= 0: obj = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009

============================================================
LINEAR PROGRAMMING PROBLEM
============================================================
Variables: 3, Constraints: 3

Original variable bounds:
  x1: 0 <= x1 <= 0
  x2: 9 <= x2 <= 9
  x3: 1 <= x3 <= 6

Transformed variable bounds (x = x' + L):
  x2': 0 <= x2' <= 0 (L=9)
  x3': 0 <= x3' <= 5 (L=1)

Upper bounds converted to constraints:
  x1 <= 0
  x2 <= 9
  x3 <= 6

Note: Upper bounds are being treated as constraints (CP_UB_as_LE=1)

Maximize:
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x1 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 x2 + 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 x3

Subject to:
7 x1 + 2 x2 + 3 x3 <= 5
5 x1 + 4 x2 + 7 x3 <= -1
2 x1 + 3 x2 + 5 x3 <= -4
============================================================


CP_UB_as_LE setting: 1

=== Starting Phase 1 ===
Phase 1 Objective: [Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 1 iterations (Phase 1)

=== Phase 1 Completed Successfully ===
Feasible Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']

Phase 2 variable mapping:
  x1 (index 0) -> column 0
  x2 (index 1) -> column 1
  x3 (index 2) -> column 2
  s_1 (index 3) -> column 3
  s_2 (index 4) -> column 4
  s_3 (index 5) -> column 5
  s_4 (index 6) -> column 6
  s_5 (index 7) -> column 7
  s_6 (index 8) -> column 8
Added s_1 to basis from Phase 1
Added s_2 to basis from Phase 1
Added s_3 to basis from Phase 1
Added s_4 to basis from Phase 1
Added s_5 to basis from Phase 1
Added s_6 to basis from Phase 1

Final Phase 2 basis:
  s_1
  s_2
  s_3
  s_4
  s_5
  s_6
Phase 2 problem dimensions:
  Variables: 9, Constraints: 6

=== Starting Phase 2 ===
Phase 2 Objective: [Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, 1), Fraction(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)]
Phase 2 Constraints:
[Fraction(7, 1), Fraction(2, 1), Fraction(3, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= 5
[Fraction(5, 1), Fraction(4, 1), Fraction(7, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= -1
[Fraction(2, 1), Fraction(3, 1), Fraction(5, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1)] <= -4
[Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1)] <= 0
[Fraction(0, 1), Fraction(0, 1), Fraction(1, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(0, 1), Fraction(1, 1)] <= 5
Initial Basis: ['s_1', 's_2', 's_3', 's_4', 's_5', 's_6']
Optimal after 3 iterations (Phase 2)

=== Verifying Solution Feasibility ===
Constraint 2 violated: 43 <= 42 is not satisfied
Constraint 3 violated: 32 <= 28 is not satisfied

=== Problem Status ===
Problem status: infeasible (solution violates constraints or bounds)

Processing node [(0, Fraction(1, 1)), (0, Fraction(8, 1)), (Fraction(1, 1), 6)]:
  LP value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 7 (bounds: (0, Fraction(8, 1)))
  x2 = 1 (bounds: (Fraction(1, 1), 6))

New incumbent solution found:
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 7 (bounds: (0, Fraction(8, 1)))
  x2 = 1 (bounds: (Fraction(1, 1), 6))
  Objective = 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010

Processing node [(0, Fraction(1, 1)), (0, Fraction(8, 1)), (0, Fraction(0, 1))]:
  LP value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009
  x0 = 1 (bounds: (0, Fraction(1, 1)))
  x1 = 8 (bounds: (0, Fraction(8, 1)))
  x2 = 0 (bounds: (0, Fraction(0, 1)))
Pruning this node (bound worse than current best)

Processing node [(0, Fraction(0, 1)), (Fraction(9, 1), Fraction(9, 1)), (0, Fraction(0, 1))]:
  LP value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009
  x0 = 0 (bounds: (0, Fraction(0, 1)))
  x1 = 9 (bounds: (Fraction(9, 1), Fraction(9, 1)))
  x2 = 0 (bounds: (0, Fraction(0, 1)))
Pruning this node (bound worse than current best)

Processing node [(Fraction(2, 1), 4), (0, Fraction(8, 1)), (0, 6)]:
  LP value: 80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008
  x0 = 2 (bounds: (Fraction(2, 1), 4))
  x1 = 6 (bounds: (0, Fraction(8, 1)))
  x2 = 0 (bounds: (0, 6))
Pruning this node (bound worse than current best)

Optimal Solution:
x0 = 1
x1 = 7
x2 = 1
Objective value: 90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
Nodes explored: 10
